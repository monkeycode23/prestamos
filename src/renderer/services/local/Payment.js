



class Payment{


    constructor({
        id="",
        label="",
        loan_id="",
        amount="",
        total_amount="",
        interest_amount="",
        paid_amount="",
        left_amount="",
        late_days="",
        payment_date="",
        status="",
        payment_method="",
        notes="",
        created_at="",
        updated_at="",
        user_id="",

}){


        this.id=id,
        this.label=label,
        this.loan_id=loan_id,
        this.amount=amount,
        this.total_amount=total_amount,
        this.interest_amount=interest_amount,
        this.paid_amount=paid_amount,
        this.left_amount=left_amount,
        this.late_days=late_days,
        this.payment_date=payment_date,
        this.status=status,
        this.payment_method=payment_method,
        this.notes=notes,
        this.created_at=created_at,
        this.updated_at=updated_at,
        this.user_id=user_id
        
    }



    async insert(){

        try {
            
            const interest_amount = this.amount*this.interest_rate/100
            const total_amount = this.amount+interest_amount

            const ob = this.loanToObject()

            delete ob.id // remove id if exists, it will be auto generated by the database
            delete ob.created_at // remove created_at if exists, it will be auto generated by the database
            delete ob.updated_at // remove updated_at if exists, it will be auto generated by the
            console.log(ob,"asdasdasd")
             //TODO: save user in the database
            const result = await window.electron.database.insert('payments', 
            Object.keys(ob), 
                Object.values(ob))

                
        } catch (error) {
            
            console.log(error)
            
            return {
                error:error.message
            }
        }

         

        
    }


    loanToObject(){

        return {
        id:this.id,
        label:this.label,
        loan_id:this.loan_id,
        amount:this.amount,
        total_amount:this.total_amount,
        interest_amount:this.interest_amount ,
        late_days:this.late_days,
        notes:this.notes,
        status:this.status ,
        user_id:this.user_id,
        payment_date:this.payment_date,
        payment_method:this.payment_method,
        paid_amount:this.paid_amount,
        left_amount :this.left_amount
        }
    }


}


export default Payment;